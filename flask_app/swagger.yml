
openapi: 3.0.0
info:
  title: 'RP Flask REST API'
  description: 'An API about people and notes'
  version: '1.0.0'

servers:
  - url: /api

components:
  schemas:
    Gene:
      type: 'object'
      required:
        - GENE
      properties:
        GENE:
          type: 'string'
        Corr_GENE:
          type: 'string'
        Pearson_R:
          type: 'integer'
        Spearman_R:
          type: 'integer'
        Mean_Diff:
          type: 'integer'
        Pearson_p:
          type: 'integer'
        Spearman_p:
          type: 'integer'
        Mean_Diff_p:
          type: 'integer'
        Largest_Comm:
          type: 'string'
        TYPE:
          type: 'string'
  parameters:
    GENE:
      name: "GENE"
      description: "selected the gene to get"
      in: path
      required: True
      schema:
        type: "string"
    note_id:
      name: "note_id"
      description: "ID of the note"
      in: path
      required: true
      schema:
        type: "integer"

paths:
  /gene:
    get:
      operationId: "gene.read_all"
      tags:
        - "Gene"
      summary: "Read the list of gene"
      responses:
        '200':
          description: "Successfully read gene list"
    post:
      operationId: "gene.create"
      tags:
        - Gene
      summary: "Create gene"
      requestBody:
        description: "Gene to create"
        required: True
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Gene"
      responses:
        "201":
          description: "Successfully created gene"
  /gene/{GENE}:
    get:
      operationId: "gene.read_one"
      tags:
        - Gene
      summary: "Read one GENE"
      parameters:
        - $ref: "#/components/parameters/GENE"
      responses:
        "200":
          description: "Successfully read GENE"
    put:
      tags:
        - Gene
      operationId: "gene.update"
      summary: "Update a gene"
      parameters:
        - $ref: "#/components/parameters/GENE"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Gene"
      responses:
        "200":
          description: "Successfully updated GENE"
    delete:
      tags:
        - Gene
      operationId: "gene.delete"
      summary: "Delete a gene"
      parameters:
        - $ref: "#/components/parameters/GENE"
      responses:
        "204":
          description: "Successfully deleted GENE"
  /notes:
    post:
      operationId: "notes.create"
      tags:
        - Notes
      summary: "Create a note associated with a gene"
      requestBody:
          description: "Note to create"
          required: True
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  person_id:
                    type: "integer"
                  content:
                    type: "string"
      responses:
        "201":
          description: "Successfully created a note"
  /notes/{note_id}:
    get:
      operationId: "notes.read_one"
      tags:
        - Notes
      summary: "Read one note"
      parameters:
        - $ref: "#/components/parameters/note_id"
      responses:
        "200":
          description: "Successfully read one note"
    put:
      tags:
        - Notes
      operationId: "notes.update"
      summary: "Update a note"
      parameters:
        - $ref: "#/components/parameters/note_id"
      responses:
        "200":
          description: "Successfully updated note"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "note"
              type: "object"
              properties:
                content:
                  type: "string"
    delete:
      tags:
        - Notes
      operationId: "notes.delete"
      summary: "Delete a note"
      parameters:
        - $ref: "#/components/parameters/note_id"
      responses:
        "204":
          description: "Successfully deleted note"

#  /notes/{note_id}:
#    get:
#      operationId: "notes.read_one"
#      tags:
#        - Notes
#      summary: "Read one gene"
#      responses:
#        '200':
#          description: Successful operation
#          content:
#            application/json:
#              schema:
#                type: object
#                properties:
#                  note:
#                    $ref: "#/components/parameters/note_id"
#
