openapi: 3.0.0
info:
  title: 'RP Flask REST API'
  description: 'An API about genes, correlations, and notes'
  version: '1.0.0'

servers:
  - url: /api

components:
  schemas:
    Note:
      type: 'object'
      required:
        - person_id
        - content
      properties:
        person_id:
          type: 'integer'
        content:
          type: 'string'
    Correlation:
      type: 'object'
      properties:
        corr_gene:
          type: 'string'
        pearson_r:
          type: 'number'
        spearman_r:
          type: 'number'
        mean_diff:
          type: 'number'
        pearson_p:
          type: 'number'
        spearman_p:
          type: 'number'
        mean_diff_p:
          type: 'number'
        largest_comm:
          type: 'boolean'
        type:
          type: 'string'
    Gene:
      type: 'object'
      required:
        - gene
      properties:
        gene:
          type: 'string'
        notes:
          type: 'array'
          items:
            $ref: '#/components/schemas/Note'
        correlations:
          type: 'array'
          items:
            $ref: '#/components/schemas/Correlation'
  parameters:
    gene_name:
      name: "gene_name"
      description: "Selected gene to get"
      in: path
      required: True
      schema:
        type: "string"

paths:
  /gene:
    get:
      operationId: "gene.read_all"
      tags:
        - "Gene"
      summary: "Read the list of genes"
      responses:
        '200':
          description: "Successfully read gene list"
    post:
      operationId: "gene.create"
      tags:
        - "Gene"
      summary: "Create gene"
      requestBody:
        description: "Gene to create"
        required: True
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Gene"
      responses:
        "201":
          description: "Successfully created gene"
  /gene/{gene_name}:
    get:
      operationId: "gene.read_one"
      tags:
        - "Gene"
      summary: "Read one gene"
      parameters:
        - $ref: "#/components/parameters/gene_name"
      responses:
        "200":
          description: "Successfully read gene"
    put:
      tags:
        - "Gene"
      operationId: "gene.update"
      summary: "Update a gene"
      parameters:
        - $ref: "#/components/parameters/gene_name"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Gene"
      responses:
        "200":
          description: "Successfully updated gene"
        "404":
          description: "Gene not found"
    delete:
      tags:
        - "Gene"
      operationId: "gene.delete"
      summary: "Delete a gene"
      parameters:
        - $ref: "#/components/parameters/gene_name"
      responses:
        "204":
          description: "Successfully deleted gene"

  /notes:
    post:
      operationId: "notes.create"
      tags:
        - "Notes"
      summary: "Create a note associated with a gene"
      requestBody:
          description: "Note to create"
          required: True
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Note"
      responses:
        "201":
          description: "Successfully created a note"
  /notes/{note_id}:
    get:
      operationId: "notes.read_one"
      tags:
        - "Notes"
      summary: "Read one note"
      parameters:
        - name: "note_id"
          in: "path"
          description: "ID of note to get"
          required: True
          schema:
            type: "integer"
      responses:
        "200":
          description: "Successfully read one note"
    put:
      tags:
        - "Notes"
      operationId: "notes.update"
      summary: "Update a note"
      parameters:
        - name: "note_id"
          in: "path"
          description: "ID of note to update"
          required: True
          schema:
            type: "integer"
      responses:
        "200":
          description: "Successfully updated note"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Note"
    delete:
      tags:
        - "Notes"
      operationId: "notes.delete"
      summary: "Delete a note"
      parameters:
        - name: "note_id"
          in: "path"
          description: "ID of note to delete"
          required: True
          schema:
            type: "integer"
      responses:
        "204":
          description: "Successfully deleted note"

  /gene/{gene_name}/correlation:
    get:
      operationId: "correlation.read_correlations"
      tags:
        - "Correlation"
      summary: "Read all correlations of a specific gene"
      parameters:
        - $ref: "#/components/parameters/gene_name"
      responses:
        "200":
          description: "Successfully read correlations list for gene"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Correlation"
    post:
      operationId: "correlation.create_for_gene"
      tags:
        - "Correlation"
      summary: "Create a correlation for a specific gene"
      parameters:
        - $ref: "#/components/parameters/gene_name"
      requestBody:
        required: True
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Correlation"
      responses:
        "201":
          description: "Successfully created correlation"

  /gene/{gene_name}/correlation/{correlation_id}:
    put:
      operationId: "correlation.update_for_gene"
      tags:
        - "Correlation"
      summary: "Update a correlation for a specific gene"
      parameters:
        - $ref: "#/components/parameters/gene_name"
        - name: "correlation_id"
          in: "path"
          description: "ID of correlation to update"
          required: True
          schema:
            type: "integer"
      requestBody:
        required: True
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Correlation"
      responses:
        "200":
          description: "Successfully updated correlation"
        "404":
          description: "Correlation not found"
    delete:
      operationId: "correlation.delete_for_gene"
      tags:
        - "Correlation"
      summary: "Delete a correlation for a specific gene"
      parameters:
        - $ref: "#/components/parameters/gene_name"
        - name: "correlation_id"
          in: "path"
          description: "ID of correlation to delete"
          required: True
          schema:
            type: "integer"
      responses:
        "204":
          description: "Successfully deleted correlation"
        "404":
          description: "Correlation not found"


#    post:
#      operationId: "correlation.create"
#      tags:
#        - "Correlation"
#      summary: "Create a correlation"
#      requestBody:
#        description: "Correlation to create"
#        required: True
#        content:
#          application/json:
#            schema:
#              $ref: "#/components/schemas/Correlation"
#      responses:
#        "201":
#          description: "Successfully created correlation"
#  /correlation/{corr_id}:
#    get:
#      operationId: "correlation.read_one"
#      tags:
#        - "Correlation"
#      summary: "Read one correlation"
#      parameters:
#        - name: "corr_id"
#          in: "path"
#          description: "ID of correlation to get"
#          required: True
#          schema:
#            type: "integer"
#      responses:
#        "200":
#          description: "Successfully read correlation"
#    put:
#      tags:
#        - "Correlation"
#      operationId: "correlation.update"
#      summary: "Update a correlation"
#      parameters:
#        - name: "corr_id"
#          in: "path"
#          description: "ID of correlation to update"
#          required: True
#          schema:
#            type: "integer"
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: "#/components/schemas/Correlation"
#      responses:
#        "200":
#          description: "Successfully updated correlation"
#    delete:
#      tags:
#        - "Correlation"
#      operationId: "correlation.delete"
#      summary: "Delete a correlation"
#      parameters:
#        - name: "corr_id"
#          in: "path"
#          description: "ID of correlation to delete"
#          required: True
#          schema:
#            type: "integer"
#      responses:
#        "204":
#          description: "Successfully deleted correlation"
#

